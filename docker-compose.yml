version: "3.8"

services:
  # API Gateway Service
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - MONGODB_URI=${MONGODB_URI}
      - USER_SERVICE_URL=http://user-service:3000
      - SERVICE_NAME=api-gateway
    depends_on:
      - user-service
    volumes:
      - ./services/api-gateway:/app
      - /app/node_modules
    networks:
      - cravecart-network

  # User Service
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    environment:
      - PORT=3000
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=7d
      - SERVICE_NAME=user-service
    volumes:
      - ./services/user-service:/app
      - /app/node_modules
    networks:
      - cravecart-network
    ports:
      - "3001:3000"
    deploy:
      resources:
        limits:
          memory: ${DOCKER_MEMORY_LIMIT:-2g}
    restart: unless-stopped

  # Customer Portal Web App
  customer-portal:
    build:
      context: ./web/customer-portal
      dockerfile: Dockerfile
    ports:
      - "3001:80"
    environment:
      - REACT_APP_API_URL=http://localhost:3000
      - REACT_APP_NAME=CraveCart
    networks:
      - cravecart-network
    deploy:
      resources:
        limits:
          memory: ${DOCKER_MEMORY_LIMIT:-2g}
    restart: unless-stopped

  # Restaurant Portal Web App
  restaurant-portal:
    build:
      context: ./web/restaurant-portal
      dockerfile: Dockerfile
    ports:
      - "3002:80"
    environment:
      - REACT_APP_API_URL=http://localhost:3000
      - REACT_APP_NAME=CraveCart
    networks:
      - cravecart-network
    deploy:
      resources:
        limits:
          memory: ${DOCKER_MEMORY_LIMIT:-2g}
    restart: unless-stopped

  restaurant-service:
    build:
      context: ./restaurant-service
      dockerfile: Dockerfile
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - "3002:3000"
    deploy:
      resources:
        limits:
          memory: ${DOCKER_MEMORY_LIMIT:-2g}
    restart: unless-stopped

  order-service:
    build:
      context: ./services/order-service
      dockerfile: Dockerfile
    environment:
      - PORT=5003
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - RESTAURANT_SERVICE_URL=${RESTAURANT_SERVICE_URL}
      - USER_SERVICE_URL=${USER_SERVICE_URL}
      - NODE_ENV=${NODE_ENV:-development}
    ports:
      - "5003:5003"
    networks:
      - cravecart-network
    deploy:
      resources:
        limits:
          memory: ${DOCKER_MEMORY_LIMIT:-2g}
    restart: unless-stopped
    depends_on:
      - restaurant-service
      - user-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  payment-service:
    build:
      context: ./services/payment-service
      dockerfile: Dockerfile
    environment:
      - PORT=5002
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - ORDER_SERVICE_URL=http://order-service:5003
      - STRIPE_SECRET_KEY_RENAMED=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLISHABLE_KEY_RENAMED=${STRIPE_PUBLISHABLE_KEY}
      - NODE_ENV=${NODE_ENV:-development}
    ports:
      - "5002:5002"
    networks:
      - cravecart-network
    deploy:
      resources:
        limits:
          memory: ${DOCKER_MEMORY_LIMIT:-2g}
    restart: unless-stopped
    depends_on:
      - order-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  delivery-service:
    build:
      context: ./delivery-service
      dockerfile: Dockerfile
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - ORDER_SERVICE_URL=${ORDER_SERVICE_URL}
    ports:
      - "3005:3000"
    deploy:
      resources:
        limits:
          memory: ${DOCKER_MEMORY_LIMIT:-2g}
    restart: unless-stopped
    depends_on:
      - order-service

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - "3006:3000"
    deploy:
      resources:
        limits:
          memory: ${DOCKER_MEMORY_LIMIT:-2g}
    restart: unless-stopped

networks:
  cravecart-network:
    driver: bridge
